#!/bin/bash

# the variable for which distro
distro=$(. distrofinder.sh)
# the filename which holds the names of the packages
FILENAME="packagelist.txt"
#old is the number of days a package list is considered old
OLD="14"
# COMMAND is the command to run depending on the user's
# distro
COMMAND=""

if [ -e /tmp/$FILENAME ]
then
	#Grab the date the file was last modded:
	LASTMOD=$(date +%s -r /tmp/$FILENAME)
	TODAY=$(date +%s)
	#DIFF is the number of days the file is old
	DIFF=$(expr $(expr $TODAY - $LASTMOD) / 86400)

	#Let's check:
	if [[ $DIFF -ge $OLD ]]
	then
		#Okay, it is too old, let's ask what the user wants:
		echo "Your packagelist.txt appears to be more than $OLD days old.  Would you like to make a new copy?"

		while [ 1 ];
		do
			answer="x"
			read -p  "[Y/n]: " answer
			if [[ $answer == "Y" ]] || [[ $answer == "y" ]];
			then
				echo "Now backing up"

				if [[ $distro == "deb" ]];
				then
					echo "it's a deb"
				elif [[ $distro == "arch" ]];
				then
					echo "it's an arch"
				elif [[ $idstro == "it's a yum" ]];
				then
					echo "yummy"
				else
					echo "distro not found"
				fi
				break

			elif [[ $answer == "n" ]]; then
				echo "User does not want to back up"
				break
			fi
		done
		echo -e '\n'
	fi

	# packagelist.txt is found, Resume control here:
	echo "Reinstall all the packages from $FILENAME?"

	while [ 1 ];
	do
		answer="x"
		read -p  "[Y/n]: " answer
		if [[ $answer == "Y" ]] || [[ $answer == "y" ]];
		then
			if [[ $distro == "deb" ]];
			then
				sudo apt-get install $(< /tmp/$FILENAME)
			elif [[ $distro == "arch" ]];
			then
				pacman -S $(< /tmp/$FILENAME)
			elif [[ $distro == "yum" ]]; then
				sudo yum install $(< /tmp/$FILENAME)
			fi
			break

		elif [[ $answer == "n" ]]; then
			echo "Bye!"
			exit
		fi
	done
else
	# package list isn't found, either they don't have
	# it (running for the first time) or it is located
	# somewhere else
	echo -e "Couldn't find a "packagelist.txt", make a new one?"

	# wait for user input:
	while [ 1 ];
	do
		userinput="x"
		read -p "[Y/n]: " userinput
		if [[ $userinput == "Y" ]] || [[ $userinput == "y" ]];
		then
			if [[ $distro == "deb" ]];
			then
				COMMAND=$(dpkg -l | grep ii | awk '{print $2}' > /tmp/$FILENAME)
			elif [[ $distro == "arch" ]];
			then
				COMMAND=$(pacman -Qqen > /tmp/$FILENAME)
			elif [[ $distro == "yum" ]];
			then
				# yum has the top lines as
				# headers, so it has to be
				# removed
				COMMAND=$(yum list installed | awk 'NR > 2 {print}' | sed 's/\ .*//' > /tmp/$FILENAME)
			fi

			echo "Done."
			break
		else
			# package list not found
			echo -e ""packagelist.txt" cannot be found, if it exists, please move your "packagelist.txt" into /tmp and run repackager again"
			break
		fi
	done
fi
